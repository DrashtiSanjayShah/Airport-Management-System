package application;

import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;

public class shopController implements Initializable{

    @FXML
    private ComboBox brand;

    @FXML
    private Label floor;

    @FXML
    private Button search;

    @FXML
    private Label shop_id;
    
    @FXML
    private TableView myTable;

    @FXML
    private TableColumn<shops_data, String > shop_name;

    @FXML
    private TableColumn<shops_data, String > id;

    @FXML
    private TableColumn<shops_data, String > product_type;

    @FXML
    private TableColumn<shops_data, String > cl_floor;
    
//    @FXML
//    private Label label1;
    
    @FXML
   	public void back(ActionEvent event) throws IOException {
//   		TODO Autogenerated
   		Parent shop_parent = FXMLLoader.load(getClass().getResource("login.fxml"));
   		Scene shop_scene = new Scene(shop_parent);
   		Stage app_stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
   		app_stage.setScene(shop_scene);
   		app_stage.show();
       }


    @FXML
    void brand(ActionEvent event) {
		
		String s = brand.getSelectionModel().getSelectedItem().toString();
	//label1.setText(s);
		
    }
    
	public void search(ActionEvent event) throws IOException
	{
		String query2 = "SELECT shop_id, floor FROM shop_details WHERE shop_name = ?";
	
		String ret="";
		String name = "";
		
		 try(Connection conn = connect_db();
				 
				 PreparedStatement pstmp = conn.prepareStatement(query2))

	     {
			pstmp.setString(1, (String) brand.getValue()) ;
			
	    ResultSet rstm=pstmp.executeQuery();
	    
	    
	                while(rstm.next())
	                {
	                          ret += rstm.getString("shop_id");
	                          name += rstm.getString("floor");
	                                                                        
	                }
	               
	            }
	    catch(SQLException ex)
	    {
	    System.err.println("Error:" + ex);
	    }
		
		 shop_id.setText(ret);
		 floor.setText(name);
	}


	private Connection connect_db() throws SQLException {
		 String url = "jdbc:postgresql://localhost:5432/miniprojectfinal";
		    String username = "postgres";
		    String password = "1234";
		    return DriverManager.getConnection(url,username,password);
	}
	
	//--------------------------------------------------------------------------------
	
	public void dbtable() {
		 TableColumn id = new TableColumn("shop_id");
	        TableColumn product_type = new TableColumn("product_type");
	        TableColumn shop_name = new TableColumn("shop_name");
	        TableColumn cl_floor = new TableColumn("floor");
	        myTable.getColumns().addAll(id, product_type, shop_name, cl_floor);

	        ObservableList<shops_data> data = null;
	        try {
	            data = connection.readPrt();
	        } catch (SQLException e) {
	            e.printStackTrace();
	        }
	                /*= FXCollections.observableArrayList(
	                new ModelTable("1203051","Shreya","1213827113","Nerul","3"),
	                new ModelTable("1203052","Shreya","1213827113","Nerul","3"),
	                new ModelTable("1203053","Shreya","1213827113","Nerul","3"),
	                new ModelTable("1203054","Shreya","1213827113","Nerul","3"));*/

	        id.setCellValueFactory(new PropertyValueFactory<shops_data,String>("shop_id"));
	        product_type.setCellValueFactory(new PropertyValueFactory<shops_data,String>("product_type"));
	        shop_name.setCellValueFactory(new PropertyValueFactory<shops_data,String>("shop_name"));
	        cl_floor.setCellValueFactory(new PropertyValueFactory<shops_data,String>("floor"));

	        myTable.setItems(data);
	}



	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		
			dbtable();
		
			ObservableList<String> list = FXCollections.observableArrayList("KFC", "Fastrack", "Starbucks", "LACOSTE", "INDIANCULTURE");		
			brand.setItems(list);
		
	}
}